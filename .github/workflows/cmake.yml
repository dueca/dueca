name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  PREFIX: ${HOME}/prefix
  PYVERSION: 3.10

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        wget -qO - https://download.opensuse.org/repositories/home:/repabuild/xUbuntu_22.04/Release.key | sudo apt-key add -
        sudo add-apt-repository "deb https://download.opensuse.org/repositories/home:/repabuild:/xenial-universe/xUbuntu_22.04/ ./"
        sudo apt update
        sudo add-apt-repository "deb https://download.opensuse.org/repositories/home:/repabuild/xUbuntu_22.04/ ./"
        sudo apt update
        sudo apt --assume-yes upgrade
        sudo apt --assume-yes install libeigen3-dev libfltk1.3-dev flex bison doxygen guile-2.2-dev libglade2-dev graphviz libgtkmm-2.4-dev freeglut3-dev libgtkglext1-dev libglui-dev python3-pyparsing libboost-dev inkscape cmake libgtk-3-dev libgtkmm-3.0-dev libhdf5-dev libboost-python-dev python3-dev lsb-release rapidjson-dev libssl-dev simple-websocket-server-dev simple-web-server-dev python3-xlwt wget python3-setuptools python3-git libpugixml-dev python3-pip python3-wheel python3-lxml libatomic-ops-dev libmsgpack-dev libdate-dev libtoml11-dev python3-venv wmctrl openbox xvfb language-pack-nl menu hdf5-tools

    - name: Install Python packages
      run: |
        pip3 install wmctrl --user
        pip3 install pynput --user
        pip3 install attrs --user
        pip3 install pillow --user
        pip3 install build --user

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        -DCMAKE_CXX_FLAGS="-DGLIB_VERSION_MIN_REQUIRED=GLIB_VERSION_2_30"
        -DCMAKE_INSTALL_PREFIX=${{env.PREFIX}}
        -DBUILD_DOC=ON
        -DDUECA_BUILD_SHARED=ON
        -DDUECA_BUILD_STATIC=OFF
        -DBUILD_UDP=ON
        -DBUILD_WEBSOCK=ON
        -DSCRIPT_PYTHON=ON
        -DBUILD_GTK2=ON -DBUILD_GTKMM=ON
        -DBUILD_GTK3=ON -DBUILD_GTKMM3=ON
        -DBUILD_GLUT=ON -DBUILD_GLUTGUI=ON
        -DBUILD_X11GL=ON -DRTC_RATE=1024
        -DNEW_LOGGING=ON -DBUILD_MOREWARN=ON
        -DBUILD_ASSERT=ON
        -DBUILD_TESTOPT=ON
        -DBUILD_DEBPRINT=ON
        -DALSO_INIT_GLUT=ON
        -DACTIV_NOCATCH=ON
        -DRUN_TESTS=ON
        -DLOG_COMMUNICATIONS=ON
        -DLOG_PACKING=ON
        -DBUILD_HDF5=ON
        -DBUILD_DDFF=ON
        -DFORCE_PYTHON_MALLOC=ON
        -DPYSITEDIR:PATH=${{env.PREFIX}}/lib/python${{env.PYVERSION}}/site-packages
        -DDUECA_INSTALL_ENVIRONMENT=ON
        -DFILLPACKER_SEND_ID=ON

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Install
      # Installs to a local prefix, needed for running some of the tests
      run: cmake --install ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: |
        git config --global user.email "ghtest@example.com"
        git config --global user.name  "example runner"
        source ${{env.PREFIX}}/dueca-env.sh && USER=example ctest -C ${{env.BUILD_TYPE}}